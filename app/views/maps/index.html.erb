<%= stylesheet_link_tag 'maps', :media => "all" %>
<div class="mapPage">
  <h2>《 捜索範囲検索gmap 》</h2>
  <p class="searchmemo">犬の捜索ではなるべく短い移動範囲内で保護することが必要です。まずは、近所やいつもの散歩コースを念入りに捜しましょう。<br>
    犬種や年齢、性格によって移動距離は異なります。愛犬の特徴や失踪日数から、移動距離を予測しましょう。<br>
    1日の移動距離　　小型犬：約300m〜1km程度<br>
    　　　　　　　　 中・大型犬：約1〜5km程度
  </p>
  <%= link_to "ホームへ戻る", root_path, class:"homeback" %>
  <div class="searchmapArea">
    <input type="text" id="address", placeholder="犬の失踪場所を入力"　><br>
    <p>約 <input type="number" id="km", placeholder="推定移動距離", value="0"> km</p>
    <div class="searchBtn">
      <button id="search">検索</button>
      <button id="clear">結果クリア</button>
    </div>
  </div>
  <div id="target"></div>
</div>

<script>
  var map;
  var marker;
  var infoWindow;

  function initMap() {
    var target = document.getElementById('target');
    var centerp = {lat: 35.6769883, lng: 139.7588499};
    map = new google.maps.Map( target, {
      center: centerp,
      zoom: 14,
    });
    document.getElementById('search').addEventListener('click', function() {
      var place = document.getElementById('address').value;
      var geocoder = new google.maps.Geocoder();
      var km = document.getElementById('km').value;
      km = Number(km);

      geocoder.geocode({ address: place }, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          var bounds = new google.maps.LatLngBounds();
          map.setCenter(results[0].geometry.location);
          for (var i in results) {
            if (results[0].geometry) {
              var latlng = results[0].geometry.location;
              var address = results[0].formatted_address;
              bounds.extend(latlng);
              setMarker(latlng);
              setInfoW(place, latlng, address);
              markerEvent();
              var myCircle = new google.maps.Circle({
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35,
                map: map,
                center: latlng,
                radius: (km * 1000)
　　　　　　　　　});
            }
          }
        } else if (status == google.maps.GeocoderStatus.ZERO_RESULTS) {
          alert("見つかりません");
        } else {
          console.log(status);
          alert("エラー発生");
        }
      });
    });
    document.getElementById('clear').addEventListener('click', function() {
      deleteMakers();
    });
  }

  function setMarker(setplace) {
    deleteMakers();
    var iconUrl = 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png';
      marker = new google.maps.Marker({
        position: setplace,
        map: map,
        icon: iconUrl
      });
    }

  function deleteMakers() {
    if(marker != null){
      marker.setMap(null);
    }
    marker = null;
  }

  function setInfoW(place, latlng, address) {
    infoWindow = new google.maps.InfoWindow({
      content: "<a href='http://www.google.com/search?q=" + place + "' target='_blank'>" + place + "</a><br><br>" + latlng + "<br><br>" + address + "<br><br><a href='http://www.google.com/search?q=" + place + "&tbm=isch' target='_blank'>画像検索 by google</a>"
    });
  }

  function markerEvent() {
    marker.addListener('click', function() {
      infoWindow.open(map, marker);
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['API_KEY'] %>&callback=initMap" async defer></script>
